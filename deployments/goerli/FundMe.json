{
  "address": "0xEE8f2A4F2953EB8265F7023F3221Fc8bdFb137E8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_AMOUNT_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getFundersToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x563a695f68b8a1bec7f73b2bb7709872510a58ab91b9ea968d2f3c95782f4956",
  "receipt": {
    "to": null,
    "from": "0x6a187F7f39B4432D3254782693811b33Fe03dF71",
    "contractAddress": "0xEE8f2A4F2953EB8265F7023F3221Fc8bdFb137E8",
    "transactionIndex": 133,
    "gasUsed": "1031134",
    "logsBloom": "0x
    "blockHash": "0x79380f38d96f92e7b2449956ea858e8483264a65f4d509c47294af400b55024a",
    "transactionHash": "0x563a695f68b8a1bec7f73b2bb7709872510a58ab91b9ea968d2f3c95782f4956",
    "logs": [],
    "blockNumber": 7803353,
    "cumulativeGasUsed": "28350110",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd4a33860578de61dbabdc8bfdb98fd742fa7028e"
  ],
  "numDeployments": 4,
  "solcInputHash": "c4c8509a5f922bfc81decd63e7b01931",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_AMOUNT_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getFundersToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Reda Aboutika\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a simple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n * @author Reda Aboutika\\n * @notice This contract is to demo a simple funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_fundersToAmountFunded;\\n    uint256 public constant MIN_AMOUNT_USD = 50 * 1e18;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MIN_AMOUNT_USD,\\n            \\\"Not enough ETH\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_fundersToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_fundersToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_fundersToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getFundersToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_fundersToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x7dc721d93af127a38143a13756ead830ae93aa365b219aeb61fd1e0de0b5319b\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x5fc10d488e5e4546168d76e8cdbaa8c9454ae8e9902a051ba1f47e42b356354b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012d0380380620012d08339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c61114a62000186600039600081816102fb0152818161054a0152818161059a0152610790015261114a6000f3fe60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610130578063be2693f01461013a578063d045d65114610144578063d7b4750c146101815761008e565b80633ccfd60b1461009857806341ac9c62146100af578063893d20e8146100da5780639e87a5cd146101055761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102f9565b005b3480156100bb57600080fd5b506100c4610539565b6040516100d19190610c98565b60405180910390f35b3480156100e657600080fd5b506100ef610546565b6040516100fc9190610c22565b60405180910390f35b34801561011157600080fd5b5061011a61056e565b6040516101279190610c3d565b60405180910390f35b6101386101be565b005b610142610598565b005b34801561015057600080fd5b5061016b60048036038101906101669190610aa2565b610826565b6040516101789190610c98565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190610acf565b61086f565b6040516101b59190610c22565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b690919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c78565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f09190610ccf565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104295760008082815481106103a3576103a2611000565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042190610f59565b915050610381565b50600067ffffffffffffffff8111156104455761044461102f565b5b6040519080825280602002602001820160405280156104735781602001602082028036833780820191505090505b5060009080519060200190610489929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b090610c0d565b60006040518083038185875af1925050503d80600081146104ed576040519150601f19603f3d011682016040523d82523d6000602084013e6104f2565b606091505b5050905080610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052d90610c58565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106a057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610656575b5050505050905060005b815181101561072b5760008282815181106106c8576106c7611000565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072390610f59565b9150506106aa565b50600067ffffffffffffffff8111156107475761074661102f565b5b6040519080825280602002602001820160405280156107755781602001602082028036833780820191505090505b506000908051906020019061078b929190610992565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107d290610c0d565b60006040518083038185875af1925050503d806000811461080f576040519150601f19603f3d011682016040523d82523d6000602084013e610814565b606091505b505090508061082257600080fd5b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061088457610883611000565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c2836108f2565b90506000670de0b6b3a764000085836108db9190610e6d565b6108e59190610d25565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190610afc565b5050509150506402540be4008161098a9190610d56565b915050919050565b828054828255906000526020600020908101928215610a0b579160200282015b82811115610a0a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b2565b5b509050610a189190610a1c565b5090565b5b80821115610a35576000816000905550600101610a1d565b5090565b600081359050610a48816110b8565b92915050565b600081519050610a5d816110cf565b92915050565b600081359050610a72816110e6565b92915050565b600081519050610a87816110e6565b92915050565b600081519050610a9c816110fd565b92915050565b600060208284031215610ab857610ab761105e565b5b6000610ac684828501610a39565b91505092915050565b600060208284031215610ae557610ae461105e565b5b6000610af384828501610a63565b91505092915050565b600080600080600060a08688031215610b1857610b1761105e565b5b6000610b2688828901610a8d565b9550506020610b3788828901610a4e565b9450506040610b4888828901610a78565b9350506060610b5988828901610a78565b9250506080610b6a88828901610a8d565b9150509295509295909350565b610b8081610ec7565b82525050565b610b8f81610f23565b82525050565b6000610ba2600b83610cbe565b9150610bad82611063565b602082019050919050565b6000610bc5600e83610cbe565b9150610bd08261108c565b602082019050919050565b6000610be8600083610cb3565b9150610bf3826110b5565b600082019050919050565b610c0781610f03565b82525050565b6000610c1882610bdb565b9150819050919050565b6000602082019050610c376000830184610b77565b92915050565b6000602082019050610c526000830184610b86565b92915050565b60006020820190508181036000830152610c7181610b95565b9050919050565b60006020820190508181036000830152610c9181610bb8565b9050919050565b6000602082019050610cad6000830184610bfe565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cda82610f03565b9150610ce583610f03565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1a57610d19610fa2565b5b828201905092915050565b6000610d3082610f03565b9150610d3b83610f03565b925082610d4b57610d4a610fd1565b5b828204905092915050565b6000610d6182610ed9565b9150610d6c83610ed9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dab57610daa610fa2565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610de857610de7610fa2565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e2557610e24610fa2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e6257610e61610fa2565b5b828202905092915050565b6000610e7882610f03565b9150610e8383610f03565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ebc57610ebb610fa2565b5b828202905092915050565b6000610ed282610ee3565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f2e82610f35565b9050919050565b6000610f4082610f47565b9050919050565b6000610f5282610ee3565b9050919050565b6000610f6482610f03565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f9757610f96610fa2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f4e6f7420656e6f75676820455448000000000000000000000000000000000000600082015250565b50565b6110c181610ec7565b81146110cc57600080fd5b50565b6110d881610ed9565b81146110e357600080fd5b50565b6110ef81610f03565b81146110fa57600080fd5b50565b61110681610f0d565b811461111157600080fd5b5056fea2646970667358221220b9a4747da6ff95d835786945f07ddaa1da8beaa28853e12bbb9d840f07be341864736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610130578063be2693f01461013a578063d045d65114610144578063d7b4750c146101815761008e565b80633ccfd60b1461009857806341ac9c62146100af578063893d20e8146100da5780639e87a5cd146101055761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102f9565b005b3480156100bb57600080fd5b506100c4610539565b6040516100d19190610c98565b60405180910390f35b3480156100e657600080fd5b506100ef610546565b6040516100fc9190610c22565b60405180910390f35b34801561011157600080fd5b5061011a61056e565b6040516101279190610c3d565b60405180910390f35b6101386101be565b005b610142610598565b005b34801561015057600080fd5b5061016b60048036038101906101669190610aa2565b610826565b6040516101789190610c98565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190610acf565b61086f565b6040516101b59190610c22565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b690919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c78565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f09190610ccf565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104295760008082815481106103a3576103a2611000565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042190610f59565b915050610381565b50600067ffffffffffffffff8111156104455761044461102f565b5b6040519080825280602002602001820160405280156104735781602001602082028036833780820191505090505b5060009080519060200190610489929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b090610c0d565b60006040518083038185875af1925050503d80600081146104ed576040519150601f19603f3d011682016040523d82523d6000602084013e6104f2565b606091505b5050905080610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052d90610c58565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106a057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610656575b5050505050905060005b815181101561072b5760008282815181106106c8576106c7611000565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072390610f59565b9150506106aa565b50600067ffffffffffffffff8111156107475761074661102f565b5b6040519080825280602002602001820160405280156107755781602001602082028036833780820191505090505b506000908051906020019061078b929190610992565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107d290610c0d565b60006040518083038185875af1925050503d806000811461080f576040519150601f19603f3d011682016040523d82523d6000602084013e610814565b606091505b505090508061082257600080fd5b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061088457610883611000565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c2836108f2565b90506000670de0b6b3a764000085836108db9190610e6d565b6108e59190610d25565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190610afc565b5050509150506402540be4008161098a9190610d56565b915050919050565b828054828255906000526020600020908101928215610a0b579160200282015b82811115610a0a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b2565b5b509050610a189190610a1c565b5090565b5b80821115610a35576000816000905550600101610a1d565b5090565b600081359050610a48816110b8565b92915050565b600081519050610a5d816110cf565b92915050565b600081359050610a72816110e6565b92915050565b600081519050610a87816110e6565b92915050565b600081519050610a9c816110fd565b92915050565b600060208284031215610ab857610ab761105e565b5b6000610ac684828501610a39565b91505092915050565b600060208284031215610ae557610ae461105e565b5b6000610af384828501610a63565b91505092915050565b600080600080600060a08688031215610b1857610b1761105e565b5b6000610b2688828901610a8d565b9550506020610b3788828901610a4e565b9450506040610b4888828901610a78565b9350506060610b5988828901610a78565b9250506080610b6a88828901610a8d565b9150509295509295909350565b610b8081610ec7565b82525050565b610b8f81610f23565b82525050565b6000610ba2600b83610cbe565b9150610bad82611063565b602082019050919050565b6000610bc5600e83610cbe565b9150610bd08261108c565b602082019050919050565b6000610be8600083610cb3565b9150610bf3826110b5565b600082019050919050565b610c0781610f03565b82525050565b6000610c1882610bdb565b9150819050919050565b6000602082019050610c376000830184610b77565b92915050565b6000602082019050610c526000830184610b86565b92915050565b60006020820190508181036000830152610c7181610b95565b9050919050565b60006020820190508181036000830152610c9181610bb8565b9050919050565b6000602082019050610cad6000830184610bfe565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cda82610f03565b9150610ce583610f03565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1a57610d19610fa2565b5b828201905092915050565b6000610d3082610f03565b9150610d3b83610f03565b925082610d4b57610d4a610fd1565b5b828204905092915050565b6000610d6182610ed9565b9150610d6c83610ed9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dab57610daa610fa2565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610de857610de7610fa2565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e2557610e24610fa2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e6257610e61610fa2565b5b828202905092915050565b6000610e7882610f03565b9150610e8383610f03565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ebc57610ebb610fa2565b5b828202905092915050565b6000610ed282610ee3565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f2e82610f35565b9050919050565b6000610f4082610f47565b9050919050565b6000610f5282610ee3565b9050919050565b6000610f6482610f03565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f9757610f96610fa2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f4e6f7420656e6f75676820455448000000000000000000000000000000000000600082015250565b50565b6110c181610ec7565b81146110cc57600080fd5b50565b6110d881610ed9565b81146110e357600080fd5b50565b6110ef81610f03565b81146110fa57600080fd5b50565b61110681610f0d565b811461111157600080fd5b5056fea2646970667358221220b9a4747da6ff95d835786945f07ddaa1da8beaa28853e12bbb9d840f07be341864736f6c63430008070033",
  "devdoc": {
    "author": "Reda Aboutika",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a simple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_fundersToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}